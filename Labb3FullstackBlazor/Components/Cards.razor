@using Labb3FullstackBlazor.Models
@inject AdminService AdminService

<div class="d-flex flex-wrap">
    @if (Skill != null)
    {
        <div class="card skill-card mb-3 shadow-sm me-3" style="width: 11rem;">
            <div class="card-body">
                @if (isEditingSkill)
                {
                    <input type="text" class="form-control mb-2" @bind="Skill.Name" />
                    <input type="text" class="form-control mb-2" @bind="Skill.YearsOfExperience" />
                    <input type="text" class="form-control mb-2" @bind="Skill.SkillLevel" />
                    <button class="btn btn-success" @onclick="SaveSkill">Save</button>
                    <button class="btn btn-secondary" @onclick="CancelEditSkill">Cancel</button>
                    <button class="btn btn-danger" @onclick="() => DeleteSkill(Skill)">Delete</button>
                }
                else
                {
                    <h5 class="card-title text-success">@Skill.Name</h5>
                    <p class="card-text"><strong>Experience:</strong> @Skill.YearsOfExperience</p>
                    <p class="card-text"><strong>Skill Level:</strong> @Skill.SkillLevel</p>
                    @if (IsAdmin)
                    {
                        <button class="btn btn-warning" @onclick="() => EditSkill(Skill)">Edit</button>
                    }
                }
            </div>
        </div>
    }
    else if (Project != null)
    {
        <div class="card project-card mb-3 shadow-sm me-3" style="width: 12rem;">
            <div class="card-body">
                @if (isEditingProject)
                {
                    <input type="text" class="form-control mb-2" @bind="Project.Name" />
                    <textarea class="form-control mb-2" @bind="Project.Description"></textarea>
                    <button class="btn btn-success" @onclick="SaveProject">Save</button>
                    <button class="btn btn-secondary" @onclick="CancelEditProject">Cancel</button>
                    <button class="btn btn-danger" @onclick="() => DeleteProject(Project)">Delete</button>
                }
                else
                {
                    <h5 class="card-title text-primary">@Project.Name</h5>
                    <p class="card-text"><strong>Description:</strong> @Project.Description</p>
                    @if (IsAdmin)
                    {
                        <button class="btn btn-warning" @onclick="() => EditProject(Project)">Edit</button>
                    }
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Skill Skill { get; set; }

    [Parameter]
    public Project Project { get; set; }

    [Parameter]
    public bool IsAdmin { get; set; }

    [Parameter]
    public EventCallback OnChange { get; set; }

    private bool isEditingSkill = false;
    private bool isEditingProject = false;

    private void EditSkill(Skill skill)
    {
        isEditingSkill = true;
    }

    private async Task SaveSkill()
    {
        isEditingSkill = false;
        await AdminService.UpdateSkill(Skill);
        Console.WriteLine($"Saved skill: {Skill.Name}");
        await OnChange.InvokeAsync();
    }

    private void CancelEditSkill()
    {
        isEditingSkill = false;
    }

    private async Task DeleteSkill(Skill skill)
    {
        await AdminService.DeleteSkill(skill.Id);
        Console.WriteLine($"Deleted skill: {skill.Name}");
        isEditingSkill = false;
        await OnChange.InvokeAsync();
    }

    private void EditProject(Project project)
    {
        isEditingProject = true;
    }

    private async Task SaveProject()
    {
        isEditingProject = false;
        await AdminService.UpdateProject(Project);
        Console.WriteLine($"Saved project: {Project.Name}");
        await OnChange.InvokeAsync();
    }

    private void CancelEditProject()
    {
        isEditingProject = false;
    }

    private async Task DeleteProject(Project project)
    {
        await AdminService.DeleteProject(project.Id);
        Console.WriteLine($"Deleted project: {project.Name}");
        isEditingProject = false;
        await OnChange.InvokeAsync();
    }
}
